frameworkVersion: '>=1.0.0 <2.0.0'

service: ${self:custom.helloRetail.name}-product-creation

custom:
  stage: ${opt:stage, self:provider.stage, self:custom.private.stage}
  private: ${file(../../private.yml)}
  helloRetail: ${file(../../helloRetail.yml)}
  retailStreamVersion: 1
  retailStream: ${file(../../retail-stream/serverless.yml)}
  productCreate: ${self:}
#  exportCreateProductApiId: ${self:custom.productCreate.service}:${self:custom.stage}:ApiGatewayCreateProductArn

provider:
  name: aws
  deploymentBucket: ${self:custom.helloRetail.deploymentBucket}
  runtime: nodejs4.3
  profile: ${self:custom.private.profile}
  region: ${self:custom.private.region}

functions:
  scrapeProducts:
    handler: 'scrape-products/scrape-products.handler'
    environment:
      STAGE: ${self:custom.stage}
      STREAM_WRITER_ROLE:
        Fn::ImportValue: ${self:custom.retailStream.custom.exportRetailStreamWriterArn}
      STREAM_NAME:
        Fn::ImportValue: ${self:custom.retailStream.custom.exportRetailStreamName}
    role:
      Fn::GetAtt:
        - ProductStreamProducer
        - Arn

  createProduct:
    handler: 'scrape-products/scrape-products.handlerPostEvent'
    environment:
      STAGE: ${self:custom.stage}
      STREAM_WRITER_ROLE:
        Fn::ImportValue: ${self:custom.retailStream.custom.exportRetailStreamWriterArn}
      STREAM_NAME:
        Fn::ImportValue: ${self:custom.retailStream.custom.exportRetailStreamName}
    role:
      Fn::GetAtt:
        - ProductStreamProducer
        - Arn
    events:
      - http:
          path: products/create
          method: post

# hello-retail-product-creation-demo-createProduct
# you can add CloudFormation resource templates here
resources:
  Resources:
    ProductServiceScrapeProductsLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: "/aws/lambda/${self:service}-${self:custom.stage}-scrapeProducts"

    ProductServiceCreateProductLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: "/aws/lambda/${self:service}-${self:custom.stage}-createProduct"

    ProductStreamProducer: # role for producing test products
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}-${self:service}-newProductSimulator
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
            - sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS:
              - 'arn:aws:iam::${self:custom.private.accountId}:role/${self:custom.stage}RetailStreamWriter'
            Action:
            - sts:AssumeRole
        ManagedPolicyArns:
          - ${self:custom.private.teamPolicy}
        Policies:
          - PolicyName: Logging
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource:
                    - Fn::GetAtt:
                      - ProductServiceScrapeProductsLogGroup
                      - Arn
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - Fn::Join:
                      - ":"
                      - - Fn::GetAtt:
                          - ProductServiceScrapeProductsLogGroup
                          - Arn
                        - "*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource:
                    - Fn::GetAtt:
                      - ProductServiceCreateProductLogGroup
                      - Arn
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - Fn::Join:
                      - ":"
                      - - Fn::GetAtt:
                          - ProductServiceCreateProductLogGroup
                          - Arn
                        - "*"


    # NOTE: This named gleaned from SLS generated CF template
    ApiGatewayMethodProductsCreatePost:
      Properties:
        AuthorizationType: AWS_IAM

  Outputs:
    CreateProductApiId:
      Description: ID of the Create Product Rest API
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: RestApiId
