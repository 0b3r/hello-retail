frameworkVersion: '>=1.0.0 <2.0.0'

plugins:
  - serverless-attach-managed-policy

service: product-scoreboard-consumer

custom:
  stage: ${opt:stage, self:provider.stage, self:custom.private.stage}
  private: ${file(../private.yml)}
  helloRetail: ${file(../helloRetail.yml)}
  retailStreamVersion: 1 # The version of this service to depend upon

provider:
  name: aws
  deploymentBucket: ${self:custom.helloRetail.deploymentBucket}
  managedPolicyArns: ${self:custom.private.teamPolicy}
  runtime: nodejs6.10
  profile: ${self:custom.private.profile}
  region: ${self:custom.private.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'kinesis:GetRecords'
        - 'kinesis:GetShardIterator'
        - 'kinesis:DescribeStream'
        - 'kinesis:ListStreams'
      Resource:
        Fn::ImportValue: ${self:custom.retailStream.custom.exportRetailStreamArn}

functions:
  scoreboardConsumer:
    handler: consumer.processKinesisEvent
    environment:
      TABLE_PRODUCT_CATEGORY_NAME:
        Ref: ProductCategory
      TABLE_PRODUCT_CATALOG_NAME:
        Ref: ProductCatalog
    events:
      - stream:
          arn: 'arn:aws:kinesis:${self:provider.region}:${self:custom.private.accountId}:stream/${self:custom.stage}Stream'
          enabled: true
          startingPosition: TRIM_HORIZON

# resources:
#   Resources:
#     # Product Catalog Tables
#     ProductCategory:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         AttributeDefinitions:
#           - AttributeName: category
#             AttributeType: S
#         KeySchema:
#           - AttributeName: category
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: ${self:custom.stage}-ProductCategory-${self:custom.productCatalogBuilderVersion}

#   Outputs:
#     ProductCategoryTableName:
#       Description: The Name of the Product Category Table
#       Value:
#         Ref: ProductCategory
#       Export:
#         Name: ${self:custom.productCatalogBuilder.custom.exportProductCategoryTableName}
#     ProductCategoryTableArn:
#       Description: The ARN for the Product Category Table
#       Value:
#         Fn::Join:
#           - '/'
#           - - 'arn:aws:dynamodb:${self:provider.region}:${self:custom.private.accountId}:table'
#             - Ref: ProductCategory
#       Export:
#         Name: ${self:custom.productCatalogBuilder.custom.exportProductCategoryTableArn}
