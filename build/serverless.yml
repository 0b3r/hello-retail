# An initial deploy of this is necessary, since it creates the build infrastructure.
# Afterward, it can modify the infrastructure it describes.

frameworkVersion: '>=1.0.0 <2.0.0'

service: hello-retail-build

custom:
  stage: ${opt:stage, self:provider.stage, self:custom.private.stage}
  private: ${file(../private.yml)}

provider:
  name: aws
  deploymentBucket: com.${self:custom.private.company}.${self:custom.private.team}.serverless.${self:provider.region}
  runtime: nodejs4.3
  profile: ${self:custom.private.profile}
  region: ${self:custom.private.region}
  environment:
    STAGE: ${self:custom.stage}

resources:
  Resources:
     # Log Group
    BuildLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: '/aws/codebuild/${self:service}'
        RetentionInDays: 7
    # Deployment Build
    DeploymentBuildRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}-${self:service}-DeploymentBuildRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - 'codebuild.amazonaws.com'
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - ${self:custom.private.teamPolicy}
        Policies:
          - PolicyName: WriteToBuildLog
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource:
                    - arn:aws:logs:${self:provider.region}:${self:custom.private.accountId}:log-group:/aws/codebuild/${self:service}
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:${self:provider.region}:${self:custom.private.accountId}:log-group:/aws/codebuild/${self:service}:*
          - PolicyName: FarTooPermissive
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - apigateway:DELETE
                    - apigateway:PUT
                    - apigateway:POST
                    - apigateway:GET
                    - cloudformation:CreateStack
                    - cloudformation:DescribeStacks
                    - cloudformation:DescribeStackEvents
                    - cloudformation:DescribeStackResource
                    - cloudformation:DescribeStackResources
                    - cloudformation:CreateUploadBucket
                    - cloudformation:UpdateStack
                    - codebuild:CreateProject
                    - codebuild:DeleteProject
                    - codebuild:UpdateProject
                    - dynamodb:CreateTable
                    - dynamodb:DescribeTable
                    - dynamodb:DeleteTable
                    - execute-api:Invoke
                    - iam:GetUser
                    - iam:GetRole
                    - iam:CreateRole
                    - iam:DeleteRole
                    - iam:PutRolePolicy
                    - iam:DeleteRolePolicy
                    - iam:AttachRolePolicy
                    - iam:DetachRolePolicy
                    - iam:PassRole
                    - iam:UpdateAssumeRolePolicy
                    - kinesis:DescribeLimits
                    - kinesis:CreateStream
                    - kinesis:DeleteStream
                    - kinesis:ListStreams
                    - kinesis:DescribeStream
                    - kinesis:EnableEnhancedMonitoring
                    - kinesis:DisableEnhancedMonitoring
                    - kinesis:IncreaseStreamRetentionPeriod
                    - kinesis:DecreaseStreamRetentionPeriod
                    - kinesis:UpdateShardCount
                    - kinesis:AddTagsToStream
                    - kinesis:ListTagsForStream
                    - kinesis:RemoveTagsFromStream
                    - kinesis:SplitShard
                    - kinesis:MergeShards
                    - kinesis:GetShardIterator
                    - kinesis:GetRecords
                    - kinesis:PutRecord
                    - kinesis:PutRecords
                    - lambda:CreateFunction
                    - lambda:DeleteFunction
                    - lambda:GetFunctionConfiguration
                    - lambda:ListVersionsByFunction
                    - lambda:PublishVersion
                    - lambda:UpdateFunctionCode
                    - lambda:GetFunction
                    - lambda:AddPermission
                    - lambda:CreateEventSourceMapping
                    - lambda:GetEventSourceMapping
                    - lambda:DeleteEventSourceMapping
                    - logs:CreateLogGroup
                    - logs:DescribeLogGroups
                    - logs:PutRetentionPolicy
                    - logs:DeleteLogGroup
                    - pipeline:CreatePipeline
                    - pipeline:UpdatePipeline
                    - pipeline:DeletePipeline
                    - s3:CreateBucket
                    - s3:ListBucket
                    - s3:GetBucketLocation
                    - s3:DeleteObject
                    - s3:GetObject
                    - s3:PutObject
                  Resource: *
    DeploymentBuildCi:
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Name: '${self:service}-codebuild'
        Description: The CodeBuild project responsible for unit testing and deploying
        DependsOn: DeploymentBuildRole
        ServiceRole: !GetAtt DeploymentBuildRole.Arn
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/nodejs:4.3.2
          EnvironmentVariables:
          - Name: STAGE
            Value: ci
          - Name: COMPANY
            Value: ${self:custom.private.company}
          - Name: TEAM
            Value: ${self:custom.private.team}
          - Name: REGION
            Value: ${self:provider.region}
        Source:
          Type: CODEPIPELINE
        TimeoutInMinutes: 15
    DeploymentBuildProd:
      Type: 'AWS::CodeBuild::Project'
      Properties:
        Name: '${self:service}-codebuild'
        Description: The CodeBuild project responsible for unit testing and deploying
        DependsOn: DeploymentBuildRole
        ServiceRole: !GetAtt DeploymentBuildRole.Arn
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/nodejs:4.3.2
          EnvironmentVariables:
          - Name: STAGE
            Value: prod
          - Name: COMPANY
            Value: ${self:custom.private.company}
          - Name: TEAM
            Value: ${self:custom.private.team}
          - Name: REGION
            Value: ${self:provider.region}
        Source:
          Type: CODEPIPELINE
        TimeoutInMinutes: 15
    # Deployment Pipeline
    DeploymentPipelineRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}-${self:service}-DeploymentPipelineRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - 'codepipeline.amazonaws.com'
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - ${self:custom.private.teamPolicy}
        Policies:
          - PolicyName: FarTooPermissive
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    # All Pipeline Actions
                    - pipeline:CreatePipeline
                    - pipeline:UpdatePipeline
                    - pipeline:DeletePipeline
                    - pipeline:GetPipeline
                    - pipeline:GetPipelineState
                    - pipeline:ListPipelines
                    - pipeline:StartPipelineExecution
                    # All Stage Actions
                    - pipeline:DisableStageTransition
                    - pipeline:EnableStageTransition
                    - pipeline:RetryStageExecution
                    # All Action Actions
                    - pipeline:PutActionRevision
                    - pipeline:PutApprovalResult
                    # All Action Type Actions
                    - pipeline:CreateCustomActionType
                    - pipeline:DeleteCustomActionType
                    # All Jobs Actions
                    - pipeline:PollForJobs
                    # CodeBuild Actions
                    - codebuild:BatchGetBuilds
#                    - codebuild:BatchGetProjects
#                    - codebuild:CreateProject
#                    - codebuild:DeleteProject
#                    - codebuild:ListBuilds
#                    - codebuild:ListBuildsForProject
#                    - codebuild:ListCuratedEnvironmentImages
#                    - codebuild:ListProjects
                    - codebuild:StartBuild
#                    - codebuild:StopBuild
#                    - codebuild:UpdateProject
                  Resource: *
    DeploymentPipeline:
      Type: 'AWS::CodePipeline::Pipeline'
      Properties:
        Name: '${self:service}-pipeline'
        RoleArn: !GetAtt DeploymentPipelineRole.Arn
        RestartExecutionOnUpdate: true
        ArtifactStore:
          Type: NO_ARTIFACTS
        Stages:
          - Name: GetSource
            Actions:
              - Name: GetSourceAction
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Provider: GitHub
                  Version: 1
                Configuration:
#                  Owner: GitHubAccountName
#                  OAuthToken: GitHubOathToken
                  Repo: hello-retail
                  Branch: initial-formation
                OutputArtifacts:
                  - Name: SourceOutput
                RunOrder: 1
          - Name: RunUnitTestsLintAndDeployCi
            Actions:
              - Name: RunUnitTestsLintAndDeployAction
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: AWS CodeBuild
                  Version: 1
                InputArtifacts:
                  - Name: SourceOutput
                Configuration:
                  ProjectName: !Ref DeploymentBuildCi
                RoleArn: !GetAtt DeploymentBuildRole.Arn
                RunOrder: 2
#          # TODO, clearly
#          - Name: AcceptanceIntegrationAndPerformanceTests
#            Actions:
#              - Name: RunAcceptanceTestsAction
#              - Name: RunIntegrationTestsAction
#              - Name: RunPerformanceTestsAction
          # TODO once we have acceptance, integration, and performance tests, lets deploy to PROD
          - Name: RunUnitTestsLintAndDeployProd
            Actions:
              - Name: RunUnitTestsLintAndDeployAction
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: AWS CodeBuild
                  Version: 1
                InputArtifacts:
                  - Name: SourceOutput
                Configuration:
                  ProjectName: !Ref DeploymentBuildProd
                RoleArn: !GetAtt DeploymentBuildRole.Arn
                RunOrder: 2
