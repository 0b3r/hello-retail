frameworkVersion: '>=1.0.0 <2.0.0'

service: hello-retail-stream

custom:
  stage: ${opt:stage, self:provider.stage, self:custom.private.stage}
  private: ${file(../private.yml)}

provider:
  name: aws
  deploymentBucket: com.${self:custom.private.company}.${self:custom.private.team}.serverless.${self:provider.region}
  runtime: nodejs4.3
  profile: ${self:custom.private.profile}
  region: ${self:custom.private.region}
  environment:
    STAGE: ${self:custom.stage}

resources:
  Resources:
    # Retail Stream
    RetailStream:
      Type: 'AWS::Kinesis::Stream'
      Properties:
        Name: ${self:custom.stage}RetailStream
        ShardCount: 10
    RetailStreamWriter: # role for producers
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}RetailStreamWriter
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: # role ARNs that are allowed to write to the Retail stream
                  - 'arn:aws:iam::${self:custom.private.accountId}:role/${self:custom.private.teamRole}'
                  - '${self:custom.private.productProvider}'
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - ${self:custom.private.teamPolicy}
        Policies:
          - PolicyName: WriteToStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'kinesis:DescribeStream'
                     - 'kinesis:PutRecord'
                     - 'kinesis:PutRecords'
                   Resource:
                     'Fn::GetAtt': [ RetailStream, Arn ]
    RetailStreamReader: # role for consumers
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}RetailStreamReader
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: # role ARNs that are allowed to write to the Retail stream
                  - 'arn:aws:iam::${self:custom.private.accountId}:role/${self:custom.private.teamRole}'
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - ${self:custom.private.teamPolicy}
        Policies:
          - PolicyName: ReadFromStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'kinesis:DescribeStream'
                     - 'kinesis:GetRecords'
                     - 'kinesis:GetShardIterator'
                     - 'kinesis:ListStreams'
                   Resource:
                     'Fn::GetAtt': [ RetailStream, Arn ]
  Outputs:
    RetailStreamName:
      Description: The Name of the Retail Stream
      Value:
        Ref: RetailStream
      Export:
        Name: '${self:service}:${self:custom.stage}:RetailStreamName'
    RetailStreamArn:
      Description: The ARN for the Retail Stream
      Value:
        'Fn::GetAtt': [ RetailStream, Arn ]
      Export:
        Name: '${self:service}:${self:custom.stage}:RetailStreamArn'
    RetailStreamWriterArn:
      Description: The ARN for the defined Role that can write events to the RetailStream
      Value:
        'Fn::GetAtt': [ RetailStreamWriter, Arn ]
      Export:
        Name: '${self:service}:${self:custom.stage}:RetailStreamWriterArn'
    RetailStreamReaderArn:
      Description: The ARN for the defined Role that can read events from the RetailStream
      Value:
        'Fn::GetAtt': [ RetailStreamReader, Arn ]
      Export:
        Name: '${self:service}:${self:custom.stage}:RetailStreamReaderArn'
